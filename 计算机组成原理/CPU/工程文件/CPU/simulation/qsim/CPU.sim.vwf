/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("address")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("address[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("result[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result";
}

SIGNAL("result[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result";
}

SIGNAL("result[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result";
}

SIGNAL("result[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result";
}

SIGNAL("result[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result";
}

SIGNAL("result[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result";
}

SIGNAL("result[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result";
}

SIGNAL("result[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result";
}

SIGNAL("result[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result";
}

SIGNAL("result[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result";
}

SIGNAL("result[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result";
}

SIGNAL("result[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result";
}

SIGNAL("result[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result";
}

SIGNAL("result[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result";
}

SIGNAL("result[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result";
}

SIGNAL("result[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result";
}

SIGNAL("c")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("z")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("n")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ov")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 500;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
		}
	}
}

TRANSITION_LIST("clr")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 110.0;
	}
}

TRANSITION_LIST("address[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("address[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("address[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("address[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 440.0;
	}
}

TRANSITION_LIST("address[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 280.0;
	}
}

TRANSITION_LIST("address[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 120.0;
	}
}

TRANSITION_LIST("address[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 200.0;
	}
}

TRANSITION_LIST("address[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
	}
}

TRANSITION_LIST("result[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 267.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 188.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 128.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("result[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 221.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 162.0;
		LEVEL 0 FOR 108.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 141.0;
	}
}

TRANSITION_LIST("result[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 221.0;
		LEVEL 1 FOR 78.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 78.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 34.0;
		LEVEL 0 FOR 156.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 112.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 93.0;
	}
}

TRANSITION_LIST("result[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 269.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 78.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 34.0;
		LEVEL 0 FOR 76.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 93.0;
	}
}

TRANSITION_LIST("result[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 221.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 78.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 34.0;
		LEVEL 0 FOR 156.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 208.0;
		LEVEL 1 FOR 93.0;
	}
}

TRANSITION_LIST("result[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 221.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 78.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 34.0;
		LEVEL 0 FOR 76.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 48.0;
			LEVEL 1 FOR 32.0;
		}
		LEVEL 0 FOR 141.0;
	}
}

TRANSITION_LIST("result[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 221.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 78.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 34.0;
		LEVEL 0 FOR 156.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 208.0;
		LEVEL 1 FOR 93.0;
	}
}

TRANSITION_LIST("result[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 189.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 46.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 162.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 76.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 93.0;
	}
}

TRANSITION_LIST("result[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 221.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 78.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 208.0;
		LEVEL 1 FOR 93.0;
	}
}

TRANSITION_LIST("result[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 107.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 78.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 82.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 28.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 48.0;
			LEVEL 1 FOR 32.0;
		}
		LEVEL 0 FOR 141.0;
	}
}

TRANSITION_LIST("result[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 49.0;
		LEVEL 1 FOR 58.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 78.0;
		LEVEL 0 FOR 34.0;
		LEVEL 1 FOR 46.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 78.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 76.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 28.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 48.0;
			LEVEL 1 FOR 32.0;
		}
		LEVEL 0 FOR 128.0;
		LEVEL 1 FOR 93.0;
	}
}

TRANSITION_LIST("result[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 51.0;
		LEVEL 1 FOR 56.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 46.0;
		LEVEL 0 FOR 34.0;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 82.0;
		LEVEL 1 FOR 82.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 93.0;
	}
}

TRANSITION_LIST("result[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 221.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 158.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 78.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 108.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 112.0;
		LEVEL 1 FOR 61.0;
	}
}

TRANSITION_LIST("result[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 107.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 78.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 78.0;
		LEVEL 1 FOR 78.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 112.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("result[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 49.0;
		LEVEL 1 FOR 58.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 78.0;
		LEVEL 0 FOR 34.0;
		LEVEL 1 FOR 46.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 78.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("result[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 51.0;
		LEVEL 1 FOR 56.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 46.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 78.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 84.0;
		LEVEL 1 FOR 156.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 112.0;
		LEVEL 1 FOR 61.0;
	}
}

TRANSITION_LIST("c")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 49.0;
		LEVEL 1 FOR 218.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 428.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 61.0;
	}
}

TRANSITION_LIST("z")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 49.0;
		LEVEL 0 FOR 170.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 779.0;
	}
}

TRANSITION_LIST("n")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 49.0;
		LEVEL 1 FOR 170.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 428.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 93.0;
	}
}

TRANSITION_LIST("ov")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 49.0;
		LEVEL 1 FOR 170.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 46.0;
		LEVEL 0 FOR 592.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 61.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "address";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "address[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "address[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "address[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "address[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "address[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "address[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "address[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "address[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27;
}

DISPLAY_LINE
{
	CHANNEL = "result[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "result[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "result[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "result[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "result[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "result[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "result[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "result[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "result[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "result[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "result[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "result[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "result[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "result[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "result[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "result[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "c";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "z";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "n";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ov";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
